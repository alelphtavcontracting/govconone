events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Define upstream for backend
    upstream backend {
        server govconone-backend-1:8000;
        # Add backup server or retry logic if needed
        keepalive 32;
    }

    server {
        listen 3000;
        server_name localhost;
        root /usr/share/nginx/html;
        index index.html;

        # Add error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }

        location /api {
            proxy_pass http://govconone-backend-1:8000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Add timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            send_timeout 300s;
            
            # Handle errors
            proxy_intercept_errors on;
            error_page 500 502 503 504 = @fallback;
        }
        
        # Fallback for when backend is down
        location @fallback {
            add_header Content-Type application/json;
            return 503 '{"status":"error","message":"Service temporarily unavailable. Please try again later."}';
        }
    }
}
